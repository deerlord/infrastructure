#!/bin/bash

/usr/sbin/useradd -r -s /sbin/nologin voice
mkdir -p ./.build/voice/
cd ./.build/voice/
cat > voice.py <<'EOF'
from http.server import BaseHTTPRequestHandler, HTTPServer
import aiohttp
from io import BytesIO
import speech_recognition as sr
KEYWORD='hal'
def speech(audio):
    result = None
    try:
        r = sr.Recognizer()
        result = r.recognize_sphinx(audio)
    except sr.UnknownValueError:
        pass
    except sr.RequestError:
        pass
    except:
        pass
    return result
def process(audio):
    retval = False
    text = speech(audio)
    if isinstance(text, str) and len(str):
        words = text.split(' ')
	keyword = words[0].lower()
        cmd = ' '.join(words[1:])
    else:
        keyword = ''
    if keyword == KEYWORD:
        pass  # send command
        # get result
        # check result
        retval = True
    return retval
class RequestHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        audio = self.rfile.read(content_length)
        result = process(audio)
        self.send_response(200 if result else 500)
        self.end_headers()
        self.wfile.write(BytesIO())
httpd = HTTPServer(('', 8080), RequestHandler)
httpd.serve_forever()
EOF
cat > Dockerfile <<'EOF'
FROM debian
RUN apt update -y
RUN apt install -y python3.7
RUN apt install -y python3-pip
RUN pip3 install SpeechRecognition
RUN mkdir /opt/voice/
COPY ./voice.py /opt/voice
CMD ["python3", "/opt/voice/voice.py"]
EOF
docker build -t voice .
cd ../../
rm -rf ./.build/sphinx/
