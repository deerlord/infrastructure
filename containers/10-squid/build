#!/bin/bash

/usr/sbin/useradd -r -s /sbin/nologin squid
mkdir ./squid/
cd ./squid/
cat > Dockerfile <<EOF
FROM sameersbn/squid
RUN ln -sf /dev/stdout /var/log/access.log
RUN chown $(id -u squid) /var/log/access.log
EOF
docker build -t squid .
cd ../
rm -rf ./squid/

docker volume create squid_spool
docker volume create squid_conf
docker network create egress
cat > /var/lib/docker/volumes/squid_conf/_data/squid.conf <<'EOF'
include /etc/squid/conf.d/*.conf
EOF
mkdir /var/lib/docker/volumes/squid_conf/_data/conf.d/
cat > /var/lib/docker/volumes/squid_conf/_data/conf.d/proxy.conf <<'EOF'
acl localnet src 0.0.0.1-0.255.255.255  # RFC 1122 "this" network (LAN)
acl localnet src 169.254.0.0/16         # RFC 3927 link-local (directly plugged) machines
acl localnet src 192.168.0.0/16         # RFC 1918 local private network (LAN)
acl localnet src fc00::/7               # RFC 4193 local private network range
acl localnet src fe80::/10              # RFC 4291 link-local (directly plugged) machines
acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 443         # https
acl Safe_ports port 1025-65535  # unregistered ports
acl CONNECT method CONNECT
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localnet
http_access deny all
http_port 3128
coredump_dir /var/cache/squid
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
EOF
chown -R squid /var/lib/docker/volumes/squid_conf/_data/
